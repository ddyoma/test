package test06;

import java.util.Random;

public class LottoTest {

	public static void main(String[] args) {

		System.out.println("--------------------");
		// ***********************************
		// 앞에서 배운것들 총정리 하는 시간임

		Random r = new Random();
		// 여기서 Random은 소문자가아닌 대문자이기 때문에, 메소드가 아니다.
		/*
		 * 
		 * 
		 * 
		 * */

		r.nextInt(45);
		/*
		 * 0부터 44까지 나옴
		 */
		int n1 = r.nextInt(45) + 1;
		/*
		 * 인트 n1에 난수를 저장한다 1부터 45까지 나오는 난수
		 */
		int[] nums = new int[6];

		/*
		 * 인트를 집어넣을 배열방 6개만듦 배열은 렝스(방갯수)속성을 가지고있다.
		 */
		System.out.println(nums.length);
		/*
		 * 출력하면 방갯수인 6이 출력)
		 */

		for (int i = 0; i < nums.length; i++) {
			// 방숫자 범위정하기
			nums[i] = r.nextInt(45) + 1;
			// 각방마다 난수 넣기(입력과정)

		}
		for (int i = 0; i < nums.length; i++) {
			System.out.println(nums[i]);
		} // 난수를넣은 배열 출력, 6자리의 난수가 나옴(중복숫자도나옴)
			// i가 0일때는 비교상대가 없어야한다
			// i가 1일때는 0이랑 비교해야한다
			// i가 2일때는 0,1이랑 비교해야한다
			// i가 3일때는 0,1,2,랑 비교해야한다...

		System.out.println("--------------------");
		// ***********************************
		//중복숫자 안나오게 하기.
		
		int[] numss = new int[6];
		for (int i = 0; i < numss.length; i++) {
			// 방숫자 범위정하기
			numss[i] = r.nextInt(45) + 1;
		} // 입력for문

		for (int i = 0; i < numss.length; i++)
			//1.i는 0이고, numss의 방길이숫자(6)보다 i가 작으면 i++
			for (int j = 0; j < i; j++) {
				//2. j 는 0이고, i번째방숫자보다 j방숫자가 작으면 j++
				//3. 0<0은 성립되지 않는다. j++하지않고, 위로 올라가 i의 0번방이 출력된다.
				//7.j++로j=1이다. 1<1은 성립되지 않는다. 위로 올라가 i의 1번방이 출력된다.
				//8.i가 2번방이 되어 내려왔다. j=0이고, 0<2는 성립된다. if문으로간다.
				//4.i가 1번방이 되어 내려왔다. j=0이고, 0<1은 성립된다. if문으로 간다.
				//10.밑에서1이 되어버린 i가 ++가되어 다시 2번방이되어 내려왔다.
				//11.j=0이다.0<2는 성립된다.if로간다.
				//13.j++로 j=1이다.1<2는 성립된다. if문으로간다.
				//15.j=2가 되었다. 2<2는 성립되지 않는다.위로 올라간다.
				//16.i가 3번방이 되어 내려왔다.
				if (numss[i] == numss[j]) // 방비교
				{//5.if문에서 numss(45까지의 난수)i와 j의 값을 비교한다.
					//6.i난수와j난수가 불일치했다. for문으로 돌아가 j방 i방을 비교한다.
					//9.i난수와j난수가 일치했다. i방 숫자를 -1로하고(i가1이돼버림) 무효화한다.
					//12.i난수와j난수가 불일치했다. for문으로 돌아가j방i방을비교한다.
					//14.i난수와j난수가 불일치했다. for문으로 돌아가 j방i방을비교한다.
					i--;
					// 중복되면 다시뽑아야하니 다시 돌리는용도(바로 전으로 돌아가게끔 방번호-)
					break;
					// for문에대한 브레이크로 for문을 나가는것.
				}

			}
		for (int i = 0; i < numss.length; i++) {
			System.out.println(numss[i]);
			//맨처음 for문의 것만 출력해야한다.
		}
	}

}
